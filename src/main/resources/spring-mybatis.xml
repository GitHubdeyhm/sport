<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"	
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 扫描指定的包，这里不包括控制器org.springframework.stereotype.Controller -->
    <context:component-scan base-package="com.sport">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 1:引入数据库信息配置的属性文件，需引入context命名空间-->
	<context:property-placeholder location="classpath:application.properties" />

    <!-- dbcp数据源配置 -->
    <bean name="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 设置连接池初始值 -->
        <property name="initialSize" value="5" />
        <!-- 设置连接池最大值 -->
        <property name="maxActive" value="100" />
        <!-- 设置连接池最小空闲值 -->
        <property name="minIdle" value="20" />
        <!-- 设置连接池最大空闲值 -->
        <property name="maxIdle" value="50" />

        <!-- sql语句，将连接返回给调用者之前，用此sql验证从连接池取出的连接是否可用，如果指定则查询必须是sql select且需返回至少一行记录 -->
        <property name="validationQuery" value="select 1" />
        <!-- 设置是否从连接池中取出连接前进行检验，如果检验失败则从池中删除该连接并尝试取出一个新的连接，设置为true时需正确设置validationQuery -->
        <property name="testOnBorrow" value="false" />
        <!-- 设置连接是否被空闲连接回收器进行检验，如果检验失败则删除该连接，设置为true时需正确设置validationQuery -->
        <property name="testWhileIdle" value="true" />
        <!-- 设置空闲连接回收器线程运行的周期，以毫秒为单位，设置为非正数代表不运行空闲连接回收器线程，需正确设置validationQuery -->
        <property name="timeBetweenEvictionRunsMillis" value="120000" />
    </bean>

	<!-- 
		配置在spring框架中集成mybatis框架，在 MyBatis-Spring中,SqlSessionFactoryBean
		是用于创建 SqlSessionFactory的。
		configLocation：指定加载mybatis的配置文件路径，此时这个mybatis配置文件主要配置一些<settings>或<typeAliases>标签
		mapperLocations：指定加载mybatis映射文件路径
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
 	</bean>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定映射的接口，这里不能是实现类 -->
		<!-- <property name="mapperInterface" value="learn.frame.dao.IDemoDao" /> -->
		<!-- value属性值与上面对应，当只有一个数据源时可以不配置 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.sport.dao" /><!-- 扫描dao接口所在的包 -->
	</bean>
		
		
	<!-- 配置事务管理器，mybatis只需配置jdbc事务即可 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- spring注解配置事务，以织入事务管理切面，其中transaction-manager的值默认为"transactionManager"-->
    <tx:annotation-driven />
    
</beans>